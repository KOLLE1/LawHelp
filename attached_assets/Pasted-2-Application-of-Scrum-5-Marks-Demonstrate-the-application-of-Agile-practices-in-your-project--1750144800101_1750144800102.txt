2. Application of Scrum (5 Marks)
Demonstrate the application of Agile practices in your project:
 Identify roles: Product Owner, Scrum Master, Team
 Maintain a product backlog and sprint backlog
 Include a burndown chart for at least 2 sprints
Deliverables:
 Document showing your scrum roles, sprint planning, and retrospectives
 Screenshots from tools like Jira, Trello, or GitHub Projects (if applicable)
3. CI/CD Pipeline with Jenkins (10 Marks)
Implement a CI/CD pipeline using Jenkins:
 Automate build, test, and deployment stages
 Integrate your source control (e.g., GitHub/GitLab)
Deliverables:
 Jenkinsfile
 Screenshots or demo video of Jenkins pipeline runs
 Explanation of the pipeline stages
4. Continuous Monitoring with Prometheus and Grafana (2.5 Marks)
Set up platform and application monitoring:
 Export Metrices from your Platform and your Application
 Visualize and alert using Prometheus and Grafana
Deliverables:
 Dashboard screenshots
 Explanation of key metrics being monitored
5. Infrastructure as Code with Ansible (2.5 Marks)
Provision and configure part of your infrastructure using Ansible:
 Include at least 2 playbooks (e.g., install packages, start services)
Deliverables:
 Ansible playbooks
 Execution logs/screenshots
6. Robust Testing of Application (10 Marks)
Implement testing at different levels:
 Unit tests, Integration tests, and optionally E2E tests
 Achieve minimum 80% code coverage
Deliverables:
 Test results and coverage report
 Sample test cases and automation scripts
7. Containerization and Orchestration with Kubernetes (15 Marks)
Deploy your application using Kubernetes:
 Containerize with Docker
 Deploy with Kubernetes manifests or Helm charts
 Implement scaling, rolling updates, and service discovery
Deliverables:
 Dockerfiles
 Kubernetes YAMLs or Helm chart
 Screenshots or recordings of Kubernetes dashboard or CLI output
8. Architecture Structures and Characteristics (20 Marks)
Demonstrate architectural thinking:
 Identify and justify architecture style (e.g., microservices, layered, eventdriven)
 Show key architectural structures (component, deployment, module views)
 Discuss trade-offs and quality attributes (e.g., performance, scalability,
security).
 Pros and Cons of chosen Architecture
Deliverables:
 Architecture document with diagrams (UML encouraged)
 A report showing all the steps of the Architectural design process as
discussed during the course. 